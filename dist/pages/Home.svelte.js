import './Home.svelte.css.proxy.js';
/* src\pages\Home.svelte generated by Svelte v3.32.2 */
import {
	SvelteComponent,
	add_render_callback,
	append,
	attr,
	component_subscribe,
	create_bidirectional_transition,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	safe_not_equal,
	set_style,
	space,
	transition_in,
	transition_out
} from "../../_snowpack/pkg/svelte/internal.js";

import { mediaQuery } from "../stores.js";
import { fade } from "../../_snowpack/pkg/svelte/transition.js";
import Introduction from "./components/home/Introduction.svelte.js";
import Buttons from "./components/home/Buttons.svelte.js";

function create_if_block_1(ctx) {
	let div;

	return {
		c() {
			div = element("div");
			set_style(div, "height", "6.9rem");
		},
		m(target, anchor) {
			insert(target, div, anchor);
		},
		d(detaching) {
			if (detaching) detach(div);
		}
	};
}

// (16:2) {#if $mediaQuery === "desktop"}
function create_if_block(ctx) {
	let div;

	return {
		c() {
			div = element("div");
			set_style(div, "height", "10rem");
		},
		m(target, anchor) {
			insert(target, div, anchor);
		},
		d(detaching) {
			if (detaching) detach(div);
		}
	};
}

function create_fragment(ctx) {
	let section;
	let t0;
	let introduction;
	let t1;
	let t2;
	let buttons;
	let section_transition;
	let current;
	let if_block0 = /*$mediaQuery*/ ctx[0] === "desktop" && create_if_block_1(ctx);
	introduction = new Introduction({});
	let if_block1 = /*$mediaQuery*/ ctx[0] === "desktop" && create_if_block(ctx);
	buttons = new Buttons({});

	return {
		c() {
			section = element("section");
			if (if_block0) if_block0.c();
			t0 = space();
			create_component(introduction.$$.fragment);
			t1 = space();
			if (if_block1) if_block1.c();
			t2 = space();
			create_component(buttons.$$.fragment);
			attr(section, "class", "content svelte-7henp0");
		},
		m(target, anchor) {
			insert(target, section, anchor);
			if (if_block0) if_block0.m(section, null);
			append(section, t0);
			mount_component(introduction, section, null);
			append(section, t1);
			if (if_block1) if_block1.m(section, null);
			append(section, t2);
			mount_component(buttons, section, null);
			current = true;
		},
		p(ctx, [dirty]) {
			if (/*$mediaQuery*/ ctx[0] === "desktop") {
				if (if_block0) {
					
				} else {
					if_block0 = create_if_block_1(ctx);
					if_block0.c();
					if_block0.m(section, t0);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (/*$mediaQuery*/ ctx[0] === "desktop") {
				if (if_block1) {
					
				} else {
					if_block1 = create_if_block(ctx);
					if_block1.c();
					if_block1.m(section, t2);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}
		},
		i(local) {
			if (current) return;
			transition_in(introduction.$$.fragment, local);
			transition_in(buttons.$$.fragment, local);

			add_render_callback(() => {
				if (!section_transition) section_transition = create_bidirectional_transition(section, fade, { duration: 300 }, true);
				section_transition.run(1);
			});

			current = true;
		},
		o(local) {
			transition_out(introduction.$$.fragment, local);
			transition_out(buttons.$$.fragment, local);
			if (!section_transition) section_transition = create_bidirectional_transition(section, fade, { duration: 300 }, false);
			section_transition.run(0);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(section);
			if (if_block0) if_block0.d();
			destroy_component(introduction);
			if (if_block1) if_block1.d();
			destroy_component(buttons);
			if (detaching && section_transition) section_transition.end();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let $mediaQuery;
	component_subscribe($$self, mediaQuery, $$value => $$invalidate(0, $mediaQuery = $$value));
	return [$mediaQuery];
}

class Home extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Home;